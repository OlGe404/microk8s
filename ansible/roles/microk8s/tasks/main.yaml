---
- name: Install microk8s
  become: true
  community.general.snap:
    name: microk8s
    classic: true
    channel: "{{ microk8s.version }}"

- name: Add current user to microk8s group
  become: true
  ansible.builtin.user:
    name: "{{ lookup('env', 'USER') }}"
    groups: ["microk8s"]
    append: true

- name: Set bash aliases for microk8s commands
  become: true
  block:
    - name: Ensure .bash_aliases exists
      ansible.builtin.copy:
        content: ""
        dest: "{{ lookup('env', 'HOME') }}/.bash_aliases"
        force: false
        mode: "0644"
        owner: "{{ lookup('env', 'USER') }}"

    - name: Append aliases to .bash_aliases
      ansible.builtin.blockinfile:
        path: "{{ lookup('env', 'HOME') }}/.bash_aliases"
        marker: "# {mark} ansible managed aliases for microk8s"
        block: |-
          alias m8s='microk8s'
          alias mkctl='microk8s kubectl'

- name: Generate kubeconfig output
  become: true
  ansible.builtin.command: microk8s kubectl config view --raw
  register: kubeconfig

- name: Create kubeconfig file
  ansible.builtin.blockinfile:
    path: "{{ lookup('env', 'HOME') }}/.kubeconfig"
    create: true
    owner: "{{ lookup('env', 'USER') }}"
    mode: "0600"
    marker: "# {mark} ansible managed kubeconfig file for microk8s"
    block: "{{ kubeconfig.stdout }}"

- name: Start microk8s
  become: true
  ansible.builtin.command: /snap/bin/microk8s.start

- name: Wait for microk8s to be ready
  become: true
  ansible.builtin.command: /snap/bin/microk8s.status --wait-ready

- name: Enable microk8s add-ons {{ microk8s.add_ons | join(', ') }}
  become: true
  ansible.builtin.command: "microk8s enable {{ item }}"
  with_items: "{{ microk8s.add_ons }}"

- name: Deploy kubernetes-dashboard
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ lookup('env', 'HOME') }}/.kubeconfig"
    namespace: kube-system
    template: "{{ query('fileglob', 'files/*.yaml') }}"

- name: Wait for kubernetes-dashboard rollout
  become: true
  ansible.builtin.command: >
    microk8s kubectl rollout status deploy/k8s-dashboard --namespace kube-system
  register: kubernetes_dashboard_status
  until: kubernetes_dashboard_status.rc == 0
  retries: 30
  delay: 10
