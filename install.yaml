---
- name: Install microk8s
  hosts: localhost
  vars_prompt:
    - name: sudo_pass
      prompt: "Provide your sudo password to start the installation"

  vars:
    ansible_connection: local
    ansible_python_interpreter: "/usr/bin/env python3"
    ansible_become_method: sudo
    ansible_sudo_pass: "{{ sudo_pass }}"

    microk8s:
      user: "{{ lookup('env', 'USER') }}"
      kubeconfig: "{{ lookup('env', 'HOME') }}/.kube/microk8s"
      dashboard_version: v2.7.0
      version: latest/stable
      add_ons:
        - dns
        - rbac
        - hostpath-storage

  tasks:
    - name: Install microk8s snap package
      become: true
      community.general.snap:
        name: microk8s
        classic: true
        channel: "{{ microk8s.version }}"

    - name: Add current user to microk8s group
      become: true
      ansible.builtin.user:
        name: "{{ microk8s.user }}"
        append: true
        groups: microk8s

    - name: Create /etc/profile.d/microk8s.sh to set alias and ENVs
      become: true
      ansible.builtin.blockinfile:
        path: /etc/profile.d/microk8s.sh
        create: true
        owner: root
        group: root
        mode: "0644"
        block: |
          alias mk8s='microk8s'
          alias mkctl='microk8s kubectl'
          alias mkns='_mkns(){ microk8s kubectl config set-context microk8s --namespace "$1" ;}; _mkns'
          export KUBECONFIG='{{ microk8s.kubeconfig }}'

    - name: Get kubeconfig file output
      become: true
      ansible.builtin.command: microk8s kubectl config view --raw
      register: kubeconfig
      changed_when: '"apiVersion: v1" in kubeconfig.stdout'
      failed_when:
        - kubeconfig.rc != 0
        - '"apiVersion: v1" not in kubeconfig.stdout'

    - name: Create kubeconfig file from output
      ansible.builtin.blockinfile:
        path: "{{ microk8s.kubeconfig }}"
        create: true
        owner: "{{ microk8s.user }}"
        mode: "0600"
        marker: "# {mark} ansible managed by https://github.com/OlGe404/microk8s"
        block: "{{ kubeconfig.stdout }}"

    - name: Start microk8s
      become: true
      ansible.builtin.command: /snap/bin/microk8s.start
      tags: skip_ansible_lint

    - name: Wait for microk8s to be ready
      become: true
      ansible.builtin.command: /snap/bin/microk8s.status --wait-ready
      tags: skip_ansible_lint

    - name: "Enable microk8s add-ons: {{ microk8s.add_ons | join(', ') }}"
      become: true
      ansible.builtin.command: "microk8s enable {{ item }}"
      register: enable_addon
      changed_when: false
      with_items: "{{ microk8s.add_ons }}"

    - name: Deploy kubernetes-dashboard
      tags: dashboard
      kubernetes.core.k8s:
        src: "https://raw.githubusercontent.com/kubernetes/dashboard/{{ microk8s.dashboard_version }}/aio/deploy/recommended.yaml"
        kubeconfig: "{{ microk8s.kubeconfig }}"

    - name: Patch kubernetes-dashboard
      tags: dashboard
      kubernetes.core.k8s:
        kubeconfig: "{{ microk8s.kubeconfig }}"
        template: "{{ playbook_dir }}/dashboard-patch.yaml"

    - name: Wait for kubernetes-dashboard rollout to finish
      tags: dashboard
      become: true
      ansible.builtin.command: >
        microk8s kubectl rollout status deploy/kubernetes-dashboard
        --namespace kubernetes-dashboard
      register: dashboard_status
      changed_when: '"successfully rolled out" in dashboard_status.stdout'
      until: dashboard_status.rc == 0
      retries: 30
      delay: 10

    - ansible.builtin.debug:
        msg: "You can now access the kubernetes-dashboard at: http://localhost:30001"
      tags:
        - skip_ansible_lint
        - dashboard
