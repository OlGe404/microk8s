---
- name: Install microk8s {{ microk8s_version }}
  hosts: localhost
  connection: local
  vars_files: vars.yaml
  tasks:
    - name: Install snap package
      become: true
      community.general.snap:
        name: microk8s
        classic: true
        channel: "{{ microk8s_version }}"

    - name: Add user to microk8s group
      become: true
      ansible.builtin.user:
        name: "{{ ansible_env.USER }}"
        append: true
        groups: microk8s

    - name: Create aliases and ENVs
      become: true
      ansible.builtin.blockinfile:
        path: /etc/profile.d/microk8s.sh
        create: true
        owner: root
        group: root
        mode: "0644"
        marker: "# {mark} ANSIBLE MANAGED BY https://github.com/OlGe404/microk8s"
        block: |
          alias mk8s='microk8s'
          {% if microk8s_manage_kubectl %}
          alias kubectl='microk8s kubectl'
          {% else %}
          alias mkctl='microk8s kubectl'
          {% endif %}
          alias mkns='_mkns(){ microk8s kubectl config set-context microk8s --namespace "$1" ;}; _mkns'
          {% if microk8s_manage_kubeconfig %}
          export KUBECONFIG='{{ microk8s_kubeconfig }}'
          {% endif %}

    - name: Get kubeconfig file output
      become: true
      ansible.builtin.command: microk8s kubectl config view --raw
      register: kubeconfig

    - name: Create kubeconfig file from output
      ansible.builtin.blockinfile:
        path: "{{ microk8s_kubeconfig }}"
        create: true
        owner: "{{ ansible_env.USER }}"
        mode: "0600"
        marker: "# {mark} ANSIBLE MANAGED BY https://github.com/OlGe404/microk8s"
        block: "{{ kubeconfig.stdout }}"

    - name: Start microk8s
      become: true
      ansible.builtin.command: /snap/bin/microk8s.start

    - name: Wait for microk8s to be ready
      become: true
      ansible.builtin.command: /snap/bin/microk8s.status --wait-ready

    - name: "Enable microk8s add-ons: {{ microk8s_add_ons | join(', ') }}"
      become: true
      ansible.builtin.command: "microk8s enable {{ item }}"
      with_items: "{{ microk8s_add_ons }}"

    - name: Community addons
      when: microk8s_community_addons | length > 0
      block:
        - name: Enable community addons repo
          become: true
          ansible.builtin.command: microk8s enable community

        - name: "Install community add-ons: {{ microk8s_community_addons | join(', ') }}"
          become: true
          ansible.builtin.command: "microk8s enable {{ item }}"
          with_items: "{{ microk8s_community_addons }}"

    - name: Add kubernetes-dashboard helm repo
      tags: dashboard
      kubernetes.core.helm_repository:
        name: kubernetes-dashboard
        url: https://kubernetes.github.io/dashboard/

    - name: Install kubernetes-dashboard
      tags: dashboard
      kubernetes.core.helm:
        kubeconfig: "{{ microk8s_kubeconfig }}"
        release_name: kubernetes-dashboard
        release_namespace: kubernetes-dashboard
        create_namespace: true
        chart_ref: kubernetes-dashboard/kubernetes-dashboard
        chart_version: "7.4.0"
        values_files: dashboard-values.yaml

    - name: Wait for kubernetes-dashboard rollout to finish
      tags: dashboard
      become: true
      ansible.builtin.command: >-
        microk8s kubectl rollout status deploy/{{ item }}
        --namespace kubernetes-dashboard --watch --timeout=180s
      with_items:
        - kubernetes-dashboard-api
        - kubernetes-dashboard-auth
        - kubernetes-dashboard-kong
        - kubernetes-dashboard-metrics-scraper
        - kubernetes-dashboard-web

    - name: Print kubernetes-dashboard infos
      tags: dashboard
      ansible.builtin.debug:
        msg: >-
          You can now access the kubernetes-dashboard at: http://localhost:30001.
          See README.md on how to get the required login token.
